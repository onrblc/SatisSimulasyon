@using SatisSimilasyon.Web.Filter
@model SatisSimilasyon.Entity.SimulationClasses.ApprovedSimulation
@{
	ViewBag.Title = "PriceDifference";
	Layout = "~/Views/Shared/_Layout.cshtml";
	string currency = Model.LocalOrExport.ToString() == "Local" ? " ₺" : " £";
}

<style>
	div.dt-buttons {
		position: relative;
		float: left;
		padding-right: 10px;
	}
</style>
<div class="row">
	<div class="col-md-12 col-sm-6 col-xs-12">
		<div class="x_panel">
			<div class="x_title">
				<div class="col-md-12">
					<div class="col-md-4 col-xs-12">
						<h2>
							Simülasyon Karşılaştırma Bilgileri
						</h2>
					</div>
				</div>
				<div class="clearfix"></div>
			</div>
			<div class="x_content">
				@Html.HiddenFor(model => model.ID, new { id = "compareID" })

				<br />
				<div id="demo-form2" data-parsley-validate class="form-horizontal form-label-left black">
					<div class="col-md-12">
						<div class="form-group">
							<label class="control-label col-md-4 col-sm-3 col-xs-6">
								Mevcut Fiyatlar | Satış - S1
							</label>
							<label class="control-label col-md-2 col-sm-3 col-xs-6">
								Yeni Fiyatlar | Satış - S1
							</label>
							<label class="control-label col-md-2 col-sm-3 col-xs-6">
								Mevcut Fiyatlar | Mali İşler - S2
							</label>
							<label class="control-label col-md-2 col-sm-3 col-xs-6">
								Yeni Fiyatlar | Mali İşler - S2
							</label>
						</div>
						<div class="form-group ">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ReleaseMevcutFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ReleaseYeniFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ReleaseMevcutFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ReleaseYeniFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group ">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Non Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.NonReleaseMevcutFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.NonReleaseYeniFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.NonReleaseMevcutFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.NonReleaseYeniFiyat, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group ">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Enf *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.MevutEnflasyon, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.YeniEnflasyon, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.MevutEnflasyon, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.YeniEnflasyon, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group ">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Artış Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ArtisMevcutRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ArtisYeniRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ArtisMevcutRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ArtisYeniRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group ">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Artış Non Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ArtisMevcutNonRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.ArtisYeniNonRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ArtisMevcutNonRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.ArtisYeniNonRelease, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group" id="dvLFF">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								LTA
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.MevcutLTA, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.YeniLTA, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.MevcutLTA, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.YeniLTA, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group" id="dvExport">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Export Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.MevcutArtisExportRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.YeniArtisExportRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.MevcutArtisExportRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.YeniArtisExportRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
						<div class="form-group " id="dvExportNon">
							<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
								Export Non Resale *
							</label>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.MevcutExportNonRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation1.YeniArtisExportNonRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.MevcutExportNonRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
							<div class="col-md-2 col-sm-6 col-xs-6">
								@Html.EditorFor(model => model.Simulation2.YeniArtisExportNonRelase, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="ln_solid"></div>
<div class="row">
	<div class="col-md-12 col-sm-12 col-xs-12 black">
		<div class="x_panel">
			<div class="x_title">
				<h2>Simülasyon Sonucu</h2>
				@using (Html.BeginForm("UploadExcel", "Simulation", FormMethod.Post, new { id = "form", enctype = "multipart/form-data" }))
				{
					<ul class="nav navbar-right panel_toolbox">
						<li>
							<button id="fileButton" class="btn btn-warning" onclick="document.getElementById('file').click()" type="button">Dosya Seçiniz</button>
							<input type="file" name="file" value="" id="file" style="display:none" />
						</li>
						<li>
							<button type="submit" class="btn btn-warning" id="btnFileUpload" data-toggle="tooltip" data-placement="top" title="Yükle"><i class="fa fa-file-text"></i></button>
						</li>
						<li>
							&nbsp;&nbsp;
						</li>
					</ul>
				}
				<div class="clearfix"></div>
			</div>
			<div class="x_content">
				<table id="datatable-responsive"
							 class="table table-striped table-bordered dt-responsive nowrap dataTable no-footer dtr-inline"
							 cellspacing="0" role="grid" aria-describedby="datatable-responsive_info"
							 style="        width: 100%;">
					<thead>
						<tr>
							<th>Müşteri Referans Kodu</th>
							<th>Referans Kodu</th>
							<th>Ürün Türü</th>
							<th>Son Satış Fiyatı</th>
							<th>Satış - Yeni Fiyatlar </th>
							<th>Mali İşler - Yeni Fiyatlar </th>
							<th>Satış Miktarı</th>
							<th>Satış Fiyat Farkı</th>
							<th>Cirosal Fark</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Simulation1.SimulationLines)
						{

							<tr>
								<td>
									@item.CustomerReferenceCode
								</td>
								<td>
									@item.ReferenceCode
								</td>
								<td>
									@item.ProductType
								</td>
								<td>
									@{
										var price = item.Price + currency.ToString();
									}
									@price
								</td>
								<td>
									@{
										var newPrice = item.NewPrice + currency.ToString();
									}
									@newPrice
								</td>
								<td>
									@{
										var sim2NewPrice = @Model.Simulation2.SimulationLines.Where(x => x.CustomerReferenceCode == item.CustomerReferenceCode && x.ReferenceCode == item.ReferenceCode).FirstOrDefault().NewPrice.ToString() + currency;
									}
									@sim2NewPrice
								</td>
								<td>
									@{ string quantity;
										if (item.SalesQuantity <= 0)
										{
											quantity = Model.Simulation2.SimulationLines.Where(x => x.CustomerReferenceCode == item.CustomerReferenceCode && x.ReferenceCode == item.ReferenceCode).FirstOrDefault().SalesQuantity.ToString();
										}
										else
										{
											quantity = item.SalesQuantity.ToString();
										}
									}
									@quantity
								</td>
								<td>-</td>
								<td>-</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>
<div class="ln_solid"></div>
<div class="row">
	<div class="col-md-12 col-sm-12 col-xs-12 black">
		<div class="x_panel">
			<div class="x_title">
				<h2>Simülasyon Bilgileri</h2>
					<ul class="nav navbar-right panel_toolbox">
						<li>
							<button class="btn btn-warning" id="btnExcel" data-toggle="tooltip" data-placement="top" title="Excel Çıktısı Al"><i class="fa fa-arrow-down"></i> Excel Çıktısı Al</button>
						</li>
					</ul>
				<div class="clearfix"></div>
			</div>
			<div class="x_content">
				<br />
				<div id="demo-form2" data-parsley-validate class="form-horizontal form-label-left black">
					<div class="form-group ">
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Ürün Grubu :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.EditorFor(model => model.ProductGroup.Name, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", id = "txtSelectedSim", disabled = true } })
						</div>
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Local/Export :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.EditorFor(model => model.LocalOrExport, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
						</div>
					</div>
					<div class="form-group ">
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Seçilen Simülasyon :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.EditorFor(model => model.SelectedSimulation.SimulationName, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", id = "txtSelectedSim", disabled = true } })
						</div>
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Onaya Gönderilme Tarihi :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.EditorFor(model => model.LastModifedOn, new { htmlAttributes = new { @class = "form-control col-md-7 col-xs-12", disabled = true } })
						</div>
					</div>
					<div class="form-group">
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Onaya Gönderen Açıklama :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.TextAreaFor(model => model.Definition, new { @class = "form-control", rows = "5", style = "resize:none", id = "txtDefinition", disabled = true })
						</div>
						<label class="control-label col-md-2 col-sm-3 col-xs-12" for="first-name">
							Onaylayan Açıklama :
						</label>
						<div class="col-md-3 col-sm-6 col-xs-6">
							@Html.TextAreaFor(model => model.ApprovedDefinition, new { @class = "form-control", rows = "5", style = "resize:none", id = "txtApprovedDef", disabled = true })
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@section scripts{
	<script>
$(document).ready(function () {
			var table = $("#datatable-responsive").DataTable();

			var newData = table.rows().data();
			for (var i = 0; i < newData.length; i++) {
				var satis = parseFloat(TryToReplace(newData[i][4].toString().replace(",", "."))).toFixed(4)
				var mali = parseFloat(TryToReplace(newData[i][5].toString().replace(",", "."))).toFixed(4);
				var satisFarki = parseFloat(mali - satis).toFixed(4);
						var salesQuantity = parseFloat(newData[i][6].toString().replace(",", ".")).toFixed(4);
				newData[i][7] = satisFarki.toString() + '@currency';
				newData[i][8] = parseFloat(satisFarki * salesQuantity).toFixed(4).toString() + '@currency';
			}
			table.clear().rows.add(newData).draw();
});
		function TryToReplace(value) {
			var newValue;
			newValue = value.toString().replace("£", "");
			newValue = value.toString().replace("₺", "");

			return newValue;
			}
			$('form').submit(function (event) {
			event.preventDefault();

			if ($("#file").val() == "") {
				toastr["error"]("Lütfen Önce Excel Dosyası Ekleyiniz");
				return;
			}
			var formdata = new FormData($(this).get(0));

			$.ajax({
				url: this.action,
				type: this.method,
				data: formdata,
				processData: false,
				contentType: false,
				beforeSend: function () {
					$.blockUI({ message: '<h1>Excel Verileri Aktarılıyor.<br/>Lütfen Bekleyin...</h1>' });
				},
				success: function (result) {
					var dataSalesQuantity = JSON.parse(JSON.stringify(result));
					var table = $('#datatable-responsive').DataTable();
					var dataCount = Object.keys(dataSalesQuantity).length;
					table.rows().every(function (rowIdx, tableLoop, rowLoop) {
						var data = this.data();
						var customerReferenceCode = data[0];
						var referenceCode = data[1];
						var salesDiff = parseFloat(TryToReplace(data[7].toString().replace(",", "."))).toFixed(4);
						for (var i = 0; i < dataCount; i++) {
							if (dataSalesQuantity[i].CustomerReferenceCode == customerReferenceCode && dataSalesQuantity[i].ReferenceCode == referenceCode) {
								var salesQuantity = dataSalesQuantity[i].SalesQuantity;
								data[6] = salesQuantity;
								data[8] = parseFloat(salesDiff * salesQuantity).toFixed(4).toString() + '@currency';
							}
						}
					});
					var newData = table.data();
					table.clear().rows.add(newData).draw();
				},

			});
			});

		$('#btnExcel').on('click', function () {
			var table = $("#datatable-responsive").DataTable();
			var excelData = [[{ "text": "Müşteri Referans Kodu" }, { "text": "Referans Kodu" }, { "text": "Ürün Türü" }, { "text": "Son Satış Fiyatı" }, { "text": "Satış - Yeni Fiyat" }, { "text": "Mali - Yeni Fiyat" }, { "text": "Satış Miktarı" }, { "text": "Satış Farkı" }, { "text": "Cirosal Fark" }]];

			var newData = table.rows().data();
			for (var i = 0; i < newData.length; i++) {
				var extra = [];
				extra = [{ "text": newData[i][0] }, { "text": newData[i][1] }, { "text": newData[i][2] }, { "text": newData[i][3] }, { "text": newData[i][4] }, { "text": newData[i][5] }, { "text": newData[i][6] }, { "text": newData[i][7] }, { "text": newData[i][8] }];
				excelData.push(extra);
			}

			var tableData = [
                {
                    "sheetName": "Simülasyon Sonucu",
                    "data": excelData
				},
								 {
                    "sheetName": "Simülasyon Karşılaştırması",
									 "data": [

										 [{ "text": "" }, { "text": "Mevcut Fiyatlar | Satış - S1" }, { "text": "Yeni Fiyatlar | Satış - S1" }, { "text": "Mevcut Fiyatlar | Mali İşler - S2" }, { "text": "Yeni Fiyatlar | Mali İşler - S2" }],
										 [{ "text": "Resale" }, { "text": "@Model.Simulation1.ReleaseMevcutFiyat" }, { "text": "@Model.Simulation1.ReleaseYeniFiyat" }, { "text": "@Model.Simulation2.ReleaseMevcutFiyat" }, { "text": "@Model.Simulation2.ReleaseYeniFiyat" }],
										 [{ "text": "Non Resale " }, { "text": "@Model.Simulation1.NonReleaseMevcutFiyat" }, { "text": "@Model.Simulation1.NonReleaseYeniFiyat" }, { "text": "@Model.Simulation2.NonReleaseMevcutFiyat" }, { "text": "@Model.Simulation2.NonReleaseYeniFiyat" }],
										 [{ "text": "Enf" }, { "text": "@Model.Simulation1.MevutEnflasyon" }, { "text": "@Model.Simulation1.YeniEnflasyon" }, { "text": "@Model.Simulation2.MevutEnflasyon" }, { "text": "@Model.Simulation2.YeniEnflasyon" }]	,
										 [{ "text": "Artış Resale " }, { "text": "@Model.Simulation1.ArtisMevcutRelease" }, { "text": "@Model.Simulation1.ArtisYeniRelease" }, { "text": "@Model.Simulation2.ArtisMevcutRelease" }, { "text": "@Model.Simulation2.ArtisYeniRelease" }],
										 [{ "text": "Artış Non Resale " }, { "text": "@Model.Simulation1.ArtisMevcutNonRelease" }, { "text": "@Model.Simulation1.ArtisYeniNonRelease" }, { "text": "@Model.Simulation2.ArtisMevcutNonRelease" }, { "text": "@Model.Simulation2.ArtisYeniNonRelease" }],
										 [{ "text": "LTA" }, { "text": "@Model.Simulation1.MevcutLTA" }, { "text": "@Model.Simulation1.YeniLTA" }, { "text": "@Model.Simulation2.MevcutLTA" }, { "text": "@Model.Simulation2.YeniLTA" }],
										 [{ "text": "Export Resale" }, { "text": "@Model.Simulation1.MevcutArtisExportRelase" }, { "text": "@Model.Simulation1.YeniArtisExportRelase" }, { "text": "@Model.Simulation2.MevcutArtisExportRelase" }, { "text": "@Model.Simulation2.YeniArtisExportRelase" }],
										 [{ "text": "Export Non Resale" }, { "text": "@Model.Simulation1.MevcutExportNonRelase" }, { "text": "@Model.Simulation1.YeniArtisExportNonRelase" }, { "text": "@Model.Simulation2.MevcutExportNonRelase" }, { "text": "@Model.Simulation2.YeniArtisExportNonRelase" }],
										 [{ "text": "" }, { "text": "" }, { "text": "" }, { "text": "" }, { "text": "" }], [{ "text": "Ürün Grubu" }, { "text": "Local/Export" }, { "text": "Onay Tarihi" }, { "text": "Seçilen Simülasyon" }],
										 [{ "text": "@Model.ProductGroup.Name" }, { "text": "@Model.LocalOrExport.DisplayName()" }, { "text": "@Model.LastModifedOn" }, { "text": "@Model.SelectedSimulation.SimulationName (@Model.SelectedSimulation.SimulationType.DisplayName())" }, { "text": "" }],
										  [{ "text": "" }, { "text": "" }, { "text": "" }, { "text": "" }, { "text": "" }],
										  [{ "text": "Onaya Gönderen Açıklama" }, { "text": "" }, { "text": "Onaylayan Açıklama" }],
										  [{ "text": "@Model.Definition" }, { "text": "" }, { "text": "@Model.ApprovedDefinition" }]
									 ]
				}
			];

			var options = {
                    fileName: "SatisSimilasyon-Satış Simülasyonu Karşılaştırma"
                };
                Jhxlsx.export(tableData, options);
});
			$(document).ajaxStop($.unblockUI);
	</script>
}
